[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.253115",
  "module": null,
  "name": "Lead Funnel",
  "script": "const frappe = window.frappe;\nconst $ = window.$;\n\nfrappe.ui.form.on(\"Lead\", {\n    setup: function(frm) {\n        frm.selected_status_for_change = null;\n    },\n\n    refresh: (frm) => {\n        const statuses = [\n            \"New\",\n            \"Working\",\n            \"Nurturing\",\n            \"Qualified\",\n            \"Converted\",\n            \"Unqualified\"\n        ];\n\n        const current_status = frm.doc.status;\n        const current_status_index = statuses.indexOf(current_status);\n        const is_last_status = current_status_index === statuses.length - 1;\n\n        let html = `\n             <style>\n                .custom-lead-header {\n                    background-color: white;\n                    padding: 20px;\n                    border-radius: 8px;\n                    border: 1px solid #e5e7eb;\n                    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n                    margin-bottom: 20px;\n                }\n                .lead-title-bar {\n                    display: flex;\n                    align-items: center;\n                    justify-content: space-between;\n                    margin-bottom: 20px;\n                }\n                .lead-left-section {\n                    display: flex;\n                    align-items: center;\n                }\n                .lead-icon {\n                    font-size: 16px;\n                    color: white;\n                    background-color: #10b981;\n                    padding: 8px;\n                    border-radius: 4px;\n                    margin-right: 12px;\n                    line-height: 1;\n                }\n                .lead-badge {\n                    background-color: #dcfce7;\n                    color: #166534;\n                    padding: 4px 8px;\n                    border-radius: 4px;\n                    font-size: 12px;\n                    font-weight: 600;\n                    margin-right: 12px;\n                }\n                .lead-name {\n                    font-size: 20px;\n                    font-weight: 600;\n                    color: #111827;\n                }\n                .lead-actions {\n                    display: flex;\n                    gap: 8px;\n                }\n                .action-btn {\n                    padding: 8px 16px;\n                    border: 1px solid #d1d5db;\n                    border-radius: 6px;\n                    background: white;\n                    color: #374151;\n                    font-size: 14px;\n                    cursor: pointer;\n                    transition: all 0.2s;\n                }\n                .action-btn:hover {\n                    background: #f9fafb;\n                    border-color: #9ca3af;\n                }\n                .action-btn.primary {\n                    background: #3b82f6;\n                    color: white;\n                    border-color: #3b82f6;\n                }\n                .action-btn.primary:hover {\n                    background: #2563eb;\n                }\n                .lead-details-grid {\n                    display: grid;\n                    grid-template-columns: repeat(4, 1fr);\n                    gap: 20px;\n                    margin-bottom: 20px;\n                }\n                .detail-item {\n                    display: flex;\n                    flex-direction: column;\n                }\n                .detail-label {\n                    font-size: 14px;\n                    color: #6b7280;\n                    margin-bottom: 4px;\n                    font-weight: 500;\n                }\n                .detail-value {\n                    font-size: 14px;\n                    color: #111827;\n                    font-weight: 600;\n                }\n               \n                \n              \n                .funnel-progress-container {\n                    display: flex;\n                    width: 100%;\n                    height: 50px;\n                    margin: 20px 0;\n                    position: relative;\n                    background: white;\n                }\n                \n                .funnel-segment {\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    position: relative;\n                    flex: 1;\n                    height: 100%;\n                    background: #e5e7eb;\n                    color: #6b7280;\n                    font-size: 14px;\n                    font-weight: 600;\n                    cursor: pointer;\n                    transition: all 0.3s ease;\n                    margin-right: 2px;\n                }\n                \n                \n                .funnel-segment .segment-text {\n                    opacity: 1;\n                    transition: opacity 0.3s ease;\n                }\n                \n               \n                .funnel-segment .segment-checkmark {\n                    opacity: 0;\n                    position: absolute;\n                    transition: opacity 0.3s ease;\n                }\n                \n               \n                .funnel-segment.completed .segment-checkmark,\n                .funnel-segment.active .segment-checkmark {\n                    opacity: 1;\n                }\n                \n                .funnel-segment.completed .segment-text,\n                .funnel-segment.active .segment-text {\n                    opacity: 0;\n                }\n                \n               \n                .funnel-segment:hover .segment-text {\n                    opacity: 1;\n                }\n                \n                .funnel-segment:hover .segment-checkmark {\n                    opacity: 0;\n                }\n                \n              \n                .funnel-segment:not(:last-child) {\n                    clip-path: polygon(0% 0%, calc(100% - 20px) 0%, 100% 50%, calc(100% - 20px) 100%, 0% 100%, 20px 50%);\n                }\n                \n                .funnel-segment:first-child {\n                    clip-path: polygon(0% 0%, calc(100% - 20px) 0%, 100% 50%, calc(100% - 20px) 100%, 0% 100%);\n                    border-radius: 6px 0 0 6px;\n                }\n                \n                .funnel-segment:last-child {\n                    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%, 20px 50%);\n                    border-radius: 0 6px 6px 0;\n                    margin-right: 0;\n                }\n                \n                \n                .funnel-segment.completed {\n                    background: #10b981;\n                    color: white;\n                    box-shadow: 0 2px 4px rgba(16, 185, 129, 0.3);\n                }\n                \n            \n                .funnel-segment.active {\n                    background: #ef4444;\n                    color: white;\n                    box-shadow: 0 2px 6px rgba(59, 130, 246, 0.4);\n                    transform: scale(1.02);\n                }\n                \n              \n                .funnel-segment.converted {\n                    background: white;\n                    color: #374151;\n                    border: 2px solid #d1d5db;\n                    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n                }\n\n                .funnel-segment:hover {\n                    transform: translateY(-1px);\n                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n                }\n                \n                .funnel-segment.completed:hover {\n                    box-shadow: 0 4px 8px rgba(16, 185, 129, 0.4);\n                }\n                \n              \n                .mark-complete-btn {\n                    background: linear-gradient(135deg, #3b82f6, #1d4ed8);\n                    color: white;\n                    text-align: center;\n                    padding: 15px;\n                    border-radius: 8px;\n                    font-weight: 600;\n                    cursor: pointer;\n                    margin-top: 10px;\n                    user-select: none;\n                    transition: all 0.3s ease;\n                    box-shadow: 0 2px 4px rgba(59, 130, 246, 0.3);\n                }\n                \n                .mark-complete-btn:hover {\n                    background: linear-gradient(135deg, #2563eb, #1e40af);\n                    transform: translateY(-1px);\n                    box-shadow: 0 4px 8px rgba(59, 130, 246, 0.4);\n                }\n            </style>\n            \n            <div class=\"custom-lead-header\">\n                <div class=\"lead-title-bar\">\n                    <div class=\"lead-left-section\">\n                        <div class=\"lead-icon\">â˜…</div>\n                        <div class=\"lead-badge\">Lead</div>\n                        <div class=\"lead-name\">${frm.doc.lead_name || \"\"}</div>\n                    </div>\n                </div>\n                <div class=\"lead-details-grid\">\n                    <div class=\"detail-item\"><span class=\"detail-label\">Company</span><span class=\"detail-value\">${frm.doc.company_name}</span></div>\n                    <div class=\"detail-item\"><span class=\"detail-label\">Designation</span><span class=\"detail-value\">${frm.doc.job_title}</span></div>\n                    <div class=\"detail-item\"><span class=\"detail-label\">Phone</span><span class=\"detail-value\">${frm.doc.phone}</span></div>\n                    <div class=\"detail-item\"><span class=\"detail-label\">Email</span><span class=\"detail-value\">${frm.doc.email_id}</span></div>\n                </div>\n            </div>\n\n            <div class=\"funnel-progress-container\">\n        `;\n\n        statuses.forEach((status, index) => {\n            let segment_class = \"\";\n            let tooltip_text = \"\";\n            if (index < current_status_index) {\n                segment_class = \"completed\";\n                tooltip_text = `${status} - Completed`;\n            } else if (index === current_status_index) {\n                if (status === \"Unqualified\") {\n                    segment_class = \"active\";\n                } else if (status === \"Converted\") {\n                    segment_class = \"converted\";\n                } else {\n                    segment_class = \"completed\";\n                }\n                tooltip_text = `${status} - Current Stage`;\n            } else {\n                if (status === \"Converted\") {\n                    segment_class = \"converted\";\n                }\n                tooltip_text = `${status} - Pending`;\n            }\n\n            const showCheckmark = index <= current_status_index && status !== \"Converted\";\n            html += `\n                <div class=\"funnel-segment ${segment_class}\" data-status=\"${status}\" data-tooltip=\"${tooltip_text}\">\n                  ${showCheckmark ? '<span class=\"segment-checkmark\">âœ“</span>' : \"\"}\n                  <span class=\"segment-text\">${status}</span>\n                </div>\n            `;\n        });\n\n        html += `</div>`;\n\n        html += `<div class=\"actions-container\" style=\"text-align: center;\">`;\n        if (!is_last_status) {\n            html += `<div class=\"mark-complete-btn\">âœ“ Mark Status as Complete</div>`;\n        }\n        html += `<div class=\"mark-complete-btn save-status-btn\" style=\"display: none;\">Save Status Change</div>`;\n        html += `</div>`;\n\n        frm.dashboard.clear_headline();\n        frm.dashboard.set_headline(html);\n    },\n\n    after_save: function(frm) {\n        frm.selected_status_for_change = null;\n        frm.dashboard.refresh();\n    }\n});\n\n$(document).on(\"click\", \".funnel-segment\", function() {\n    const clicked_status = $(this).data(\"status\");\n    const frm = cur_frm;\n\n    if (clicked_status !== frm.doc.status) {\n        frm.selected_status_for_change = clicked_status;\n        $(\".funnel-segment\").removeClass(\"selected\");\n        $(this).addClass(\"selected\");\n        $(\".save-status-btn\").show();\n        $(\".mark-complete-btn:not(.save-status-btn)\").hide();\n    } else {\n        frm.selected_status_for_change = null;\n        $(\".funnel-segment\").removeClass(\"selected\");\n        $(\".save-status-btn\").hide();\n        $(\".mark-complete-btn:not(.save-status-btn)\").show();\n    }\n});\n\n$(document).on(\"click\", \".save-status-btn\", function() {\n    const frm = cur_frm;\n    if (frm.selected_status_for_change) {\n        frm.set_value(\"status\", frm.selected_status_for_change);\n        frm.save();\n    }\n});\n\n$(document).on(\"click\", \".mark-complete-btn:not(.save-status-btn)\", function() {\n    const frm = cur_frm;\n    const statuses = [\"New\", \"Working\", \"Nurturing\", \"Qualified\", \"Convert\", \"Unqualified\"];\n    const current_status_index = statuses.indexOf(frm.doc.status);\n    const next_status_index = current_status_index + 1;\n\n    if (next_status_index < statuses.length) {\n        const next_status = statuses[next_status_index];\n        frm.set_value(\"status\", next_status);\n        frm.save();\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.435909",
  "module": null,
  "name": "Opportunity Funnel",
  "script": "const frappe = window.frappe;\nconst $ = window.$;\n\nfrappe.ui.form.on(\"Opportunity\", {\n    setup: function(frm) {\n        frm.selected_status_for_change = null;\n    },\n\n    refresh: (frm) => {\n        const statuses = [\"Introduction\", \"Discussion\", \"Proposal\", \"Negotiation\", \"Agreement\", \"Closed Won\", \"Closed Lost\", \"Drop\"];\n\n        const current_status = frm.doc.status;\n        const current_status_index = statuses.indexOf(current_status);\n        const is_last_status = current_status === \"Drop\";\n\n        let html = `\n                <style>\n                .custom-lead-header {\n                    background-color: white;\n                    padding: 20px;\n                    border-radius: 8px;\n                    border: 1px solid #e5e7eb;\n                    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n                    margin-bottom: 20px;\n                }\n                .lead-title-bar {\n                    display: flex;\n                    align-items: center;\n                    justify-content: space-between;\n                    margin-bottom: 20px;\n                }\n                .lead-left-section {\n                    display: flex;\n                    align-items: center;\n                }\n                .lead-icon {\n                    font-size: 16px;\n                    color: white;\n                    background-color: #10b981;\n                    padding: 8px;\n                    border-radius: 4px;\n                    margin-right: 12px;\n                    line-height: 1;\n                }\n                .lead-badge {\n                    background-color: #dcfce7;\n                    color: #166534;\n                    padding: 4px 8px;\n                    border-radius: 4px;\n                    font-size: 12px;\n                    font-weight: 600;\n                    margin-right: 12px;\n                }\n                .lead-name {\n                    font-size: 20px;\n                    font-weight: 600;\n                    color: #111827;\n                }\n                .lead-actions {\n                    display: flex;\n                    gap: 8px;\n                }\n                .action-btn {\n                    padding: 8px 16px;\n                    border: 1px solid #d1d5db;\n                    border-radius: 6px;\n                    background: white;\n                    color: #374151;\n                    font-size: 14px;\n                    cursor: pointer;\n                    transition: all 0.2s;\n                }\n                .action-btn:hover {\n                    background: #f9fafb;\n                    border-color: #9ca3af;\n                }\n                .action-btn.primary {\n                    background: #3b82f6;\n                    color: white;\n                    border-color: #3b82f6;\n                }\n                .action-btn.primary:hover {\n                    background: #2563eb;\n                }\n                .lead-details-grid {\n                    display: grid;\n                    grid-template-columns: repeat(4, 1fr);\n                    gap: 20px;\n                    margin-bottom: 20px;\n                }\n                .detail-item {\n                    display: flex;\n                    flex-direction: column;\n                }\n                .detail-label {\n                    font-size: 14px;\n                    color: #6b7280;\n                    margin-bottom: 4px;\n                    font-weight: 500;\n                }\n                .detail-value {\n                    font-size: 14px;\n                    color: #111827;\n                    font-weight: 600;\n                }\n                \n             \n                .funnel-progress-container {\n                    display: flex;\n                    width: 100%;\n                    height: 50px;\n                    margin: 20px 0;\n                    position: relative;\n                    background: white;\n                }\n                \n                .funnel-segment {\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    position: relative;\n                    flex: 1;\n                    height: 100%;\n                    background: #e5e7eb;\n                    color: #6b7280;\n                    font-size: 14px;\n                    font-weight: 600;\n                    cursor: pointer;\n                    transition: all 0.3s ease;\n                    margin-right: 2px;\n                }\n                \n            \n                .funnel-segment .segment-text {\n                    opacity: 1;\n                    transition: opacity 0.3s ease;\n                }\n                \n               \n                .funnel-segment .segment-checkmark {\n                    opacity: 0;\n                    position: absolute;\n                    transition: opacity 0.3s ease;\n                }\n                \n              \n                .funnel-segment.completed .segment-checkmark,\n                .funnel-segment.active .segment-checkmark {\n                    opacity: 1;\n                }\n                \n                .funnel-segment.completed .segment-text,\n                .funnel-segment.active .segment-text {\n                    opacity: 0;\n                }\n                \n             \n                .funnel-segment:hover .segment-text {\n                    opacity: 1;\n                }\n                \n                .funnel-segment:hover .segment-checkmark {\n                    opacity: 0;\n                }\n                \n              \n                .funnel-segment:not(:last-child) {\n                    clip-path: polygon(0% 0%, calc(100% - 20px) 0%, 100% 50%, calc(100% - 20px) 100%, 0% 100%, 20px 50%);\n                }\n                \n                .funnel-segment:first-child {\n                    clip-path: polygon(0% 0%, calc(100% - 20px) 0%, 100% 50%, calc(100% - 20px) 100%, 0% 100%);\n                    border-radius: 6px 0 0 6px;\n                }\n                \n                .funnel-segment:last-child {\n                    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%, 20px 50%);\n                    border-radius: 0 6px 6px 0;\n                    margin-right: 0;\n                }\n                \n               \n                .funnel-segment.completed {\n                    background: #10b981;\n                    color: white;\n                    box-shadow: 0 2px 4px rgba(16, 185, 129, 0.3);\n                }\n                \n               \n                .funnel-segment.active {\n                    background: #10b981;\n                    color: white;\n                    box-shadow: 0 2px 4px rgba(16, 185, 129, 0.3);\n                }\n                \n              \n                .funnel-segment.final-stage {\n                    background: #e5e7eb;\n                    color: #6b7280;\n                    border: 1px solid #d1d5db;\n                }\n                .funnel-segment.closed-won-active {\n                    background: #10b981;\n                    color: white;\n                    box-shadow: 0 2px 4px rgba(16, 185, 129, 0.3);\n                }\n                .funnel-segment.closed-lost-active {\n                    background: #ef4444;\n                    color: white;\n                    box-shadow: 0 2px 4px rgba(239, 68, 68, 0.3);\n                }\n\n                .funnel-segment:hover {\n                    transform: translateY(-1px);\n                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n                }\n                \n                .funnel-segment.completed:hover {\n                    box-shadow: 0 4px 8px rgba(16, 185, 129, 0.4);\n                }\n                \n               \n                .mark-complete-btn {\n                    background: linear-gradient(135deg, #3b82f6, #1d4ed8);\n                    color: white;\n                    text-align: center;\n                    padding: 15px;\n                    border-radius: 8px;\n                    font-weight: 600;\n                    cursor: pointer;\n                    margin-top: 10px;\n                    user-select: none;\n                    transition: all 0.3s ease;\n                    box-shadow: 0 2px 4px rgba(59, 130, 246, 0.3);\n                }\n                \n                .mark-complete-btn:hover {\n                    background: linear-gradient(135deg, #2563eb, #1e40af);\n                    transform: translateY(-1px);\n                    box-shadow: 0 4px 8px rgba(59, 130, 246, 0.4);\n                }\n            </style>\n            \n            <div class=\"custom-lead-header\">\n                 <div class=\"lead-title-bar\">\n                    <div class=\"lead-left-section\">\n                        <div class=\"lead-icon\">â˜…</div>\n                        <div class=\"lead-badge\">Opportunity</div>\n                        <div class=\"lead-name\">${frm.doc.title || \"\"}</div>\n                    </div>\n                </div>\n                <div class=\"lead-details-grid\">\n                     <div class=\"detail-item\"><span class=\"detail-label\">Account Name</span><span class=\"detail-value\">${frm.doc.customer_name || \"N/A\"}</span></div>\n                     <div class=\"detail-item\"><span class=\"detail-label\">Close Date</span><span class=\"detail-value\">${frm.doc.transaction_date || \"N/A\"}</span></div>\n                     <div class=\"detail-item\"><span class=\"detail-label\">Opportunity Owner</span><span class=\"detail-value\">${frm.doc.opportunity_owner || \"N/A\"}</span></div>\n                     <div class=\"detail-item\"><span class=\"detail-label\">Contact Number</span><span class=\"detail-value\">${frm.doc.contact_no || \"N/A\"}</span></div>\n                </div>\n            </div>\n\n            <div class=\"funnel-progress-container\">\n        `;\n\n        statuses.forEach((status, index) => {\n            let segment_class = \"\";\n            let tooltip_text = `Click to set status to ${status}`;\n            let showCheckmark = false;\n            let showText = true;\n\n            if (index < current_status_index) {\n                segment_class = \"completed\";\n                showCheckmark = true;\n                showText = false;\n            } else if (index === current_status_index) {\n                segment_class = \"active\";\n                if (status === \"Closed Won\") {\n                    segment_class += \" closed-won-active\";\n                } else if (status === \"Closed Lost\") {\n                    segment_class += \" closed-lost-active\";\n                } else if (status === \"Drop\") {\n                    segment_class += \" drop-active\";\n                }\n                showCheckmark = true;\n                showText = false;\n            } else {\n                segment_class = \"final-stage\";\n            }\n            \n            html += `\n                <div class=\"funnel-segment ${segment_class}\" data-status=\"${status}\" data-tooltip=\"${tooltip_text}\">\n                    <span class=\"segment-checkmark\" style=\"opacity: ${showCheckmark ? 1 : 0};\">âœ“</span>\n                    <span class=\"segment-text\" style=\"opacity: ${showText ? 1 : 0};\">${status}</span>\n                </div>\n            `;\n        });\n\n        html += `</div>`;\n\n        html += `<div class=\"actions-container\" style=\"text-align: center;\">`;\n        if (!is_last_status) {\n            html += `<div class=\"mark-complete-btn\">âœ“ Mark Status as Complete</div>`;\n        }\n        html += `<div class=\"mark-complete-btn save-status-btn\" style=\"display: none;\">Save Status Change</div>`;\n        html += `</div>`;\n\n        frm.dashboard.clear_headline();\n        frm.dashboard.set_headline(html);\n    },\n\n    after_save: function(frm) {\n        frm.selected_status_for_change = null;\n        frm.dashboard.refresh();\n    }\n});\n\n$(document).on(\"mouseenter\", \".funnel-segment\", function() {\n    $(this).find(\".segment-text\").css(\"opacity\", \"1\");\n    $(this).find(\".segment-checkmark\").css(\"opacity\", \"0\");\n}).on(\"mouseleave\", \".funnel-segment\", function() {\n    const statuses = [\"Introduction\", \"Discussion\", \"Proposal\", \"Negotiation\", \"Agreement\", \"Closed Won\", \"Closed Lost\", \"Drop\"];\n    const current_status_index = statuses.indexOf(cur_frm.doc.status);\n    const status_of_this_segment = $(this).data(\"status\");\n    const index_of_this_segment = statuses.indexOf(status_of_this_segment);\n\n    if (index_of_this_segment <= current_status_index) {\n        $(this).find(\".segment-checkmark\").css(\"opacity\", \"1\");\n        $(this).find(\".segment-text\").css(\"opacity\", \"0\");\n    } else {\n        $(this).find(\".segment-checkmark\").css(\"opacity\", \"0\");\n        $(this).find(\".segment-text\").css(\"opacity\", \"1\");\n    }\n});\n\n$(document).on(\"click\", \".funnel-segment\", function() {\n    const clicked_status = $(this).data(\"status\");\n    const frm = cur_frm;\n\n    if (clicked_status !== frm.doc.status) {\n        frm.selected_status_for_change = clicked_status;\n        $(\".funnel-segment\").removeClass(\"selected\");\n        $(this).addClass(\"selected\");\n        $(\".save-status-btn\").show();\n        $(\".mark-complete-btn:not(.save-status-btn)\").hide();\n    } else {\n        frm.selected_status_for_change = null;\n        $(\".funnel-segment\").removeClass(\"selected\");\n        $(\".save-status-btn\").hide();\n        $(\".mark-complete-btn:not(.save-status-btn)\").show();\n    }\n});\n\n$(document).on(\"click\", \".save-status-btn\", function() {\n    const frm = cur_frm;\n    if (frm.selected_status_for_change) {\n        frm.set_value(\"status\", frm.selected_status_for_change);\n        frm.save();\n    }\n});\n\n$(document).on(\"click\", \".mark-complete-btn:not(.save-status-btn)\", function() {\n    const frm = cur_frm;\n    const statuses = [\"Introduction\", \"Discussion\", \"Proposal\", \"Negotiation\", \"Agreement\", \"Closed Won\", \"Closed Lost\", \"Drop\"];\n    const current_status_index = statuses.indexOf(frm.doc.status);\n    const next_status_index = current_status_index + 1;\n\n    if (next_status_index < statuses.length) {\n        const next_status = statuses[next_status_index];\n        frm.set_value(\"status\", next_status);\n        frm.save();\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sample Entry",
  "enabled": 1,
  "modified": "2025-08-28 17:49:46.546600",
  "module": null,
  "name": "Sample Entry",
  "script": "frappe.ui.form.on('Sample Entry', {\n    type_of_sample: function(frm) {\n        if (frm.doc.type_of_sample) {\n            switch (frm.doc.type_of_sample) {\n                case 'Internal Sample':\n                case 'Receipt - Packing Material':\n                case 'Blending - Premix':\n                case 'Filling Line Tea Break Sample':\n                case 'Filling Line Lunch Break Sample':\n                case 'Filling Line End Break Sample':\n                case 'Filling Line Break Sample':\n                case 'Tanker Flushing':\n                case 'Other':\n                case 'Empty Tanker IN':\n                    frm.set_value('retention_period', 'NA');\n                    break;\n                case 'Receipt - SFG':\n                case 'Blending':\n                case 'First Filled Sample':\n                case 'Lab Blend':\n                case 'Bulk Filling Tanker Out':\n                    frm.set_value('retention_period', '1 Year');\n                    break;\n                case 'Receipt - Additive':\n                    frm.set_value('retention_period', '06 Months');\n                    break;\n                case 'Reciept- Base oil':\n                case 'Blending Kettle Flushing':\n                case 'Storage Tank flushing':\n                    frm.set_value('retention_period', '03 Months');\n                    break;\n                default:\n                    frm.set_value('retention_period', 'NA');\n            }\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "New Client",
  "enabled": 1,
  "modified": "2025-09-04 11:33:58.972037",
  "module": "QBS ATS",
  "name": "New Client",
  "script": "frappe.listview_settings['New Client'] = {\r\n    onload: function(listview) {\r\n\r\n        cur_list.page.add_menu_item(__(\"New Client\"), function() {\r\n\r\n            frappe.show_alert({\r\n                message: __('Starting Client Sync with Ceipal API...'),\r\n                indicator: 'blue'\r\n            }, 5);\r\n\r\n            frappe.call({\r\n                method: \"qbs_ats.qbs_ats.doctype.new_client.new_client.custom_method\",\r\n\r\n                callback: function(response) {\r\n                    if (response.message) {\r\n                        frappe.msgprint({\r\n                            title: __('Sync Complete'),\r\n                            indicator: 'green',\r\n                            message: __(response.message.message || \"Clients synced successfully!\") \r\n                        });\r\n                        \r\n                        cur_list.refresh(); \r\n                    }\r\n                },\r\n\r\n                error: function(err) {\r\n                    frappe.msgprint({\r\n                        title: __('Error'),\r\n                        indicator: 'red',\r\n                        message: __('An error occurred during the sync process. Please check the Error Log.')\r\n                    });\r\n                    console.error(err); \r\n                }\r\n            });\r\n        });\r\n    }\r\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Vendor",
  "enabled": 1,
  "modified": "2025-09-04 11:35:07.210436",
  "module": "QBS ATS",
  "name": "Vendor",
  "script": "frappe.listview_settings['Vendor'] = {\r\n    onload: function(listview) {\r\n\r\n        cur_list.page.add_menu_item(__(\"Vendor\"), function() {\r\n\r\n            frappe.show_alert({\r\n                message: __('Starting vendor Sync with Ceipal API...'),\r\n                indicator: 'blue'\r\n            }, 5);\r\n\r\n            frappe.call({\r\n                method: \"qbs_ats.qbs_ats.doctype.vendor.vendor.custom_method\",\r\n\r\n                callback: function(response) {\r\n                    if (response.message) {\r\n                        frappe.msgprint({\r\n                            title: __('Sync Complete'),\r\n                            indicator: 'green',\r\n                            message: __(response.message.message || \"Vendors synced successfully!\") \r\n                        });\r\n                        \r\n                        cur_list.refresh(); \r\n                    }\r\n                },\r\n\r\n                error: function(err) {\r\n                    frappe.msgprint({\r\n                        title: __('Error'),\r\n                        indicator: 'red',\r\n                        message: __('An error occurred during the sync process. Please check the Error Log.')\r\n                    });\r\n                    console.error(err); \r\n                }\r\n            });\r\n        });\r\n    }\r\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Applicants",
  "enabled": 1,
  "modified": "2025-09-04 11:35:59.908073",
  "module": "QBS ATS",
  "name": "Applicants",
  "script": "frappe.listview_settings['Applicants'] = {\r\n    onload: function(listview) {\r\n\r\n        cur_list.page.add_menu_item(__(\"Applicants\"), function() {\r\n\r\n            frappe.show_alert({\r\n                message: __('Starting Applicants Sync with Ceipal API...'),\r\n                indicator: 'blue'\r\n            }, 5);\r\n\r\n            frappe.call({\r\n                method: \"qbs_ats.qbs_ats.doctype.applicants.applicants.custom_method\",\r\n\r\n                callback: function(response) {\r\n                    if (response.message) {\r\n                        frappe.msgprint({\r\n                            title: __('Sync Complete'),\r\n                            indicator: 'green',\r\n                            message: __(response.message.message || \"Applicants synced successfully!\") \r\n                        });\r\n                        \r\n                        cur_list.refresh(); \r\n                    }\r\n                },\r\n\r\n                error: function(err) {\r\n                    frappe.msgprint({\r\n                        title: __('Error'),\r\n                        indicator: 'red',\r\n                        message: __('An error occurred during the sync process. Please check the Error Log.')\r\n                    });\r\n                    console.error(err); \r\n                }\r\n            });\r\n        });\r\n    }\r\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Creation",
  "enabled": 1,
  "modified": "2025-09-04 11:39:06.064630",
  "module": "QBS ATS",
  "name": "Job Creation",
  "script": "frappe.listview_settings['Job Creation'] = {\r\n    onload: function(listview) {\r\n\r\n        cur_list.page.add_menu_item(__(\"Job Creation\"), function() {\r\n\r\n            frappe.show_alert({\r\n                message: __('Starting Job Sync with Ceipal API...'),\r\n                indicator: 'blue'\r\n            }, 5);\r\n\r\n            frappe.call({\r\n                method: \"qbs_ats.qbs_ats.doctype.job_creation.job_creation.custom_method\",\r\n\r\n                callback: function(response) {\r\n                    if (response.message) {\r\n                        frappe.msgprint({\r\n                            title: __('Sync Complete'),\r\n                            indicator: 'green',\r\n                            message: __(response.message.message || \"Jobs synced successfully!\") \r\n                        });\r\n                        \r\n                        cur_list.refresh(); \r\n                    }\r\n                },\r\n\r\n                error: function(err) {\r\n                    frappe.msgprint({\r\n                        title: __('Error'),\r\n                        indicator: 'red',\r\n                        message: __('An error occurred during the sync process. Please check the Error Log.')\r\n                    });\r\n                    console.error(err); \r\n                }\r\n            });\r\n        });\r\n    }\r\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Talent Bench",
  "enabled": 1,
  "modified": "2025-09-04 11:40:27.606167",
  "module": "QBS ATS",
  "name": "Talent Bench",
  "script": "frappe.listview_settings['Talent Bench'] = {\r\n    onload: function(listview) {\r\n\r\n        cur_list.page.add_menu_item(__(\"Talent Bench\"), function() {\r\n\r\n            frappe.show_alert({\r\n                message: __('Starting Telant Bench Sync with Ceipal API...'),\r\n                indicator: 'blue'\r\n            }, 5);\r\n\r\n            frappe.call({\r\n                method: \"qbs_ats.qbs_ats.doctype.talent_bench.talent_bench.custom_method\",\r\n\r\n                callback: function(response) {\r\n                    if (response.message) {\r\n                        frappe.msgprint({\r\n                            title: __('Sync Complete'),\r\n                            indicator: 'green',\r\n                            message: __(response.message.message || \"Telant Bench synced successfully!\") \r\n                        });\r\n                        \r\n                        cur_list.refresh(); \r\n                    }\r\n                },\r\n\r\n                error: function(err) {\r\n                    frappe.msgprint({\r\n                        title: __('Error'),\r\n                        indicator: 'red',\r\n                        message: __('An error occurred during the sync process. Please check the Error Log.')\r\n                    });\r\n                    console.error(err); \r\n                }\r\n            });\r\n        });\r\n    }\r\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Placement",
  "enabled": 1,
  "modified": "2025-09-12 15:16:48.596449",
  "module": "QBS ATS",
  "name": "Placement",
  "script": "frappe.listview_settings['Placement'] = {\r\n    onload: function(listview) {\r\n\r\n        cur_list.page.add_menu_item(__(\"Placement\"), function() {\r\n\r\n            frappe.show_alert({\r\n                message: __('Starting placement Sync with Ceipal API...'),\r\n                indicator: 'blue'\r\n            }, 5);\r\n\r\n            frappe.call({\r\n                method: \"qbs_ats.qbs_ats.doctype.placement.placement.custom_method\",\r\n\r\n                callback: function(response) {\r\n                    if (response.message) {\r\n                        frappe.msgprint({\r\n                            title: __('Sync Complete'),\r\n                            indicator: 'green',\r\n                            message: __(response.message.message || \"Placement synced successfully!\") \r\n                        });\r\n                        \r\n                        cur_list.refresh(); \r\n                    }\r\n                },\r\n\r\n                error: function(err) {\r\n                    frappe.msgprint({\r\n                        title: __('Error'),\r\n                        indicator: 'red',\r\n                        message: __('An error occurred during the sync process. Please check the Error Log.')\r\n                    });\r\n                    console.error(err); \r\n                }\r\n            });\r\n        });\r\n    }\r\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.361920",
  "module": null,
  "name": "Opportunity Popup",
  "script": "frappe.ui.form.on('Opportunity', {\n    onload: function(frm) {\n        let customVertical = frappe.utils.get_url_arg(\"custom_vertical\");\n        if (customVertical) {\n            frm.set_value('custom_vertical', customVertical);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.372972",
  "module": null,
  "name": "Opportunity Pop Up",
  "script": "frappe.listview_settings['Opportunity'] = {\n    refresh: function (listview) {\n        if (frappe.get_route()[0] === \"List\" && frappe.get_route()[1] === \"Opportunity\") {\n            listview.page.wrapper.find('.primary-action').off('click').on('click', function () {\n                let dialog = new frappe.ui.Dialog({\n                    title: \"New Opportunity\",\n                    fields: [\n                        {\n                            fieldtype: \"HTML\",\n                            fieldname: \"step_html\"\n                        }\n                    ],\n                    primary_action_label: \"Next\",\n                    primary_action(values) {\n                        let selected = document.querySelector('input[name=\"record_type_input\"]:checked');\n                      \n                        let selected_type = selected.value;\n                        dialog.hide();\n                        \n                        // Using window.location to force a full page reload and avoid caching issues\n                        let new_doc_url = `/app/opportunity/new-opportunity-1?custom_vertical=${encodeURIComponent(selected_type)}`;\n                        window.location.href = new_doc_url;\n                    }\n                });\n                \n                let step1_html = `\n                    <div id=\"step1\">\n                        <p><b>Select a record type</b></p>\n                        <label><input type=\"radio\" name=\"record_type_input\" value=\"Permanent Staffing\" checked> Permanent Staffing</label><br><br>\n                        <label><input type=\"radio\" name=\"record_type_input\" value=\"Background Verification\"> Background Verification</label><br><br>\n                        <label><input type=\"radio\" name=\"record_type_input\" value=\"Executive Level Hiring (Low and Perm)\"> Executive Level Hiring (Low end perm)</label><br><br>\n                        <label><input type=\"radio\" name=\"record_type_input\" value=\"Franchise\"> Franchise</label><br><br>\n                        <label><input type=\"radio\" name=\"record_type_input\" value=\"Labour Law Advisory & Compilance\"> Labour Law Advisory & Compliance</label><br><br>\n                        <label><input type=\"radio\" name=\"record_type_input\" value=\"Learning & Development\"> Learning & Development</label><br><br>\n                        <label><input type=\"radio\" name=\"record_type_input\" value=\"Talent Management\"> Talent Management</label><br><br>\n                        <label><input type=\"radio\" name=\"record_type_input\" value=\"Temporary Staffing\"> Temporary Staffing</label>\n                    </div>\n                `;\n                dialog.fields_dict.step_html.$wrapper.html(step1_html);\n\n                dialog.show();\n                dialog.$wrapper.find('.modal-dialog').css({\n                    \"max-width\": \"600px\",\n                    \"width\": \"70%\",\n                    \"margin-top\": \"150px\"\n                });\n                dialog.get_close_btn().show();\n            });\n        }\n    }\n};\n\nfrappe.ui.form.on('Opportunity', {\n    onload: function(frm) {\n        // Read the custom_vertical value from the URL and set it in the form\n        let customVertical = frappe.utils.get_url_arg(\"custom_vertical\");\n        if (customVertical) {\n            frm.set_value('custom_vertical', customVertical);\n        }\n    }\n});",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.211210",
  "module": "CRM PP",
  "name": "assign to check box",
  "script": "frappe.ui.form.on('Lead', {\n    refresh: function(frm) {\n        // Listen for any Bootstrap modal being shown\n        $(document).on('shown.bs.modal', function(e) {\n            const modal = $(e.target);\n\n            // Check if this is the \"Add to ToDo\" modal\n            if (modal.find('.modal-title:contains(\"Add to ToDo\")').length) {\n\n                // Hide \"Assign to me\" checkbox\n                modal.find('label:contains(\"Assign to me\")').closest('.form-group').hide();\n\n                // Hide \"Assign To User Group\" field\n                modal.find('label:contains(\"Assign To User Group\")').closest('.form-group').hide();\n\n                // Hide other buttons inside modal footer or body\n                modal.find('.btn:contains(\"Assigned To\")').hide();\n                modal.find('.btn:contains(\"Comments\")').hide();\n                modal.find('.btn:contains(\"Follow\")').hide();\n\n                // Hide icons for Comment, Person, Heart (like/favorite)\n                modal.find('.octicon-comment-discussion, .octicon-person, .octicon-heart').closest('button').hide();\n            }\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:05.827826",
  "module": "CRM PP",
  "name": "Lead Create button",
  "script": "frappe.ui.form.on(\"Lead\", {\n    refresh: function(frm) {\n        $(document).on('click', '.btn-group .dropdown-toggle', function() {\n            $('.btn-group .dropdown-menu li:has(button:contains(\"Prospect\"))').hide();\n\n            $('.btn-group .dropdown-menu li:has(button:contains(\"Quotation\"))').hide();\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.180962",
  "module": null,
  "name": "Creation date and Owner",
  "script": "frappe.ui.form.on('Lead', {\n    refresh(frm) {\n        if (!frm.doc.custom_created_on) {\n            frm.set_value('custom_created_on', frm.doc.creation);\n        }\n    },\n    \n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.337456",
  "module": "CRM PP",
  "name": "Hide lead option",
  "script": "frappe.ui.form.on('Lead', {\n    onload: function(frm) {\n        frm.set_df_property('custom_qualification_criteria', 'hidden', true);\n        frm.set_df_property('custom_temporary_staffing_checklist', 'hidden', true);\n        frm.set_df_property('custom_sop', 'hidden', true);\n        frm.set_df_property('custom_section_break_igf4f', 'hidden', true);\n        frm.set_df_property('custom_llc', 'hidden', true);\n    },\n\n    refresh: function(frm) {\n        show_hide_fields(frm);\n    },\n\n    custom_vertical: function(frm) {\n        show_hide_fields(frm);\n    }\n});\n\nfunction show_hide_fields(frm) {\n    const status_nurturing = frm.doc.status === \"Nurturing\";\n    const vertical = frm.doc.custom_vertical ? frm.doc.custom_vertical.trim() : \"\";\n\n    frm.set_df_property('custom_qualification_criteria', 'hidden', !(status_nurturing && vertical === \"Permanent Staffing\"));\n\n    frm.set_df_property('custom_temporary_staffing_checklist', 'hidden', !(status_nurturing && vertical === \"Temporary Staffing\"));\n\n    frm.set_df_property('custom_sop', 'hidden', !(status_nurturing && vertical === \"Franchise\"));\n\n    frm.set_df_property('custom_section_break_igf4f', 'hidden', !(status_nurturing && vertical === \"Learning & Development\"));\n\n    frm.set_df_property('custom_llc', 'hidden', !(status_nurturing && vertical === \"Labour Law Advisory & Compilance\"));\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.160158",
  "module": "CRM PP",
  "name": "Hide New Event",
  "script": "frappe.ui.form.on('Lead', {\n    refresh(frm) {\n        setTimeout(() => {\n            // Find the New Event button\n            const $new_event_btn = $('.new-event-btn');\n            \n            if ($new_event_btn.length) {\n                // Add our handler WITHOUT removing existing ones\n                $new_event_btn.on('click', function() {\n                    // After dialog opens, hide the fields\n                    setTimeout(() => {\n                        $('[data-fieldname=\"public\"]').closest('.frappe-control').hide();\n                        $('[data-fieldname=\"select_attachments\"]').closest('.frappe-control').hide();\n                    }, 300);\n                });\n            }\n        }, 500);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.190546",
  "module": "CRM PP",
  "name": "Full Name",
  "script": "frappe.ui.form.on('Lead', {\n    refresh(frm) {\n        setup_lead_owner_override(frm);\n    },\n\n    onload_post_render(frm) {\n        setup_lead_owner_override(frm);\n    },\n\n    lead_owner(frm) {\n        setTimeout(() => setup_lead_owner_override(frm), 100);\n    }\n});\n\nfunction setup_lead_owner_override(frm) {\n    if (!frm.doc.lead_owner || !frm.fields_dict.lead_owner) return;\n\n    let field = frm.fields_dict.lead_owner;\n    if (!field.$input || !field.$input.length) return;\n\n    if (frm.doc.lead_owner === \"Administrator\") {\n        field.$input.val(\"Administrator\");\n        return;\n    }\n\n    frappe.db.get_value(\"User\", frm.doc.lead_owner, \"full_name\").then(r => {\n        if (r && r.message && r.message.full_name) {\n            let display_name = r.message.full_name;\n            let email = frm.doc.lead_owner;\n\n            field.$input.val(display_name);\n\n            field.$input.off('change.lead_owner_fix');\n            field.$input.on('change.lead_owner_fix', function() {\n                if (field.$input.val() === email) {\n                    field.$input.val(display_name);\n                }\n            });\n\n            let observer = new MutationObserver(function(mutations) {\n                mutations.forEach(function(mutation) {\n                    if (mutation.type === 'attributes' && mutation.attributeName === 'value') {\n                        if (field.$input.val() === email) {\n                            field.$input.val(display_name);\n                        }\n                    }\n                });\n\n                if (field.$input.val() === email) {\n                    field.$input.val(display_name);\n                }\n            });\n\n            if (field.$input[0]) {\n                observer.observe(field.$input[0], {\n                    attributes: true,\n                    attributeFilter: ['value']\n                });\n\n                if (!frm._lead_owner_observers) frm._lead_owner_observers = [];\n                frm._lead_owner_observers.push(observer);\n            }\n\n            if (!frm._lead_owner_interval) {\n                frm._lead_owner_interval = setInterval(() => {\n                    if (frm.doc.lead_owner === email && field.$input.val() === email) {\n                        field.$input.val(display_name);\n                    }\n                }, 100);\n            }\n\n            if (field.awesomplete && field.awesomplete.input) {\n                field.awesomplete.input.value = display_name;\n            }\n\n            let original_parse = field.parse_validate_and_set_in_model;\n            field.parse_validate_and_set_in_model = function(value) {\n                if (value === display_name) value = email;\n                return original_parse.call(field, value);\n            };\n        }\n    });\n}\n\n$(document).on('form-unload', function() {\n    frappe.route_hooks.after_load = (frm) => {\n        if (frm._lead_owner_interval) clearInterval(frm._lead_owner_interval);\n        if (frm._lead_owner_observers) frm._lead_owner_observers.forEach(obs => obs.disconnect());\n    };\n});\n\nfrappe.form.link_formatters['User'] = function(value, doc, options) {\n    if (!value) return '';\n    if (value === 'Administrator') return 'Administrator';\n\n    if (frappe.boot.user_info && frappe.boot.user_info[value]) {\n        return frappe.boot.user_info[value].fullname || value;\n    }\n\n    return value;\n};\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.274665",
  "module": null,
  "name": "Qualification Matrix",
  "script": "frappe.ui.form.on('Lead', {\n    // --- Auto Calculate Company Age when Establishment Year changes ---\n    custom_company_establishment_year: function(frm) {\n        if (frm.doc.custom_company_establishment_year) {\n            let currentYear = new Date().getFullYear();\n            let companyAge = currentYear - frm.doc.custom_company_establishment_year;\n\n            // Save calculated age (optional field)\n            // Set boolean or flag if company is 3+ years old\n            if (companyAge >= 3) {\n                frm.set_value(\"custom_company_age__3_years\", 1);\n            } else {\n                frm.set_value(\"custom_company_age__3_years\", 0);\n            }\n        }\n    },\n\n    validate: function(frm) {\n        if (frm.doc.custom_vertical == \"Permanent Staffing\") {\n            let score = 0;\n\n            // --- Recalculate Company Age before validation ---\n            if (frm.doc.custom_company_establishment_year) {\n                let currentYear = new Date().getFullYear();\n                let companyAge = currentYear - frm.doc.custom_company_establishment_year;\n                if (companyAge >= 3) {\n                    frm.set_value(\"custom_company_age__3_years\", 1);\n                    score += 6;\n                } else {\n                    frm.set_value(\"custom_company_age__3_years\", 0);\n                }\n            }\n\n            // . --- Mandatory Do-ability Check ---\n            \n            if (!frm.doc.custom_recruitment_doability_approved && frm.doc.status !=\"New\") {\n                frm.set_value(\"custom_qualification_score\", 0);\n                frm.set_value(\"status\", \"Unqualified\");\n                frappe.msgprint(__('Lead disqualified: Recruitment Do-ability is not approved.'));\n                return;\n            }\n\n            // 1. --- Eligible Mandates (CTC) Layered Scoring ---\n            if (frm.doc.custom_salary_offering) {\n                let ctc_score = 0;\n                switch (frm.doc.custom_salary_offering.trim()) {\n                    case \"Less than â‚¹5 LPA\":\n                    case \"4 to 8 Lacs\":\n                        ctc_score = 0;\n                        break;\n                    case \"5.01 to 8lakhs\":\n                        ctc_score = 6;\n                        break;\n                    case \"8 to 12LPA\":\n                        ctc_score = 8;\n                        break;\n                    case \"12 to 20 LPA\":\n                        ctc_score = 9;\n                        break;\n                    case \"20.01 and above\":\n                        ctc_score = 10;\n                        break;\n                }\n                score += ctc_score;\n                frm.set_value(\"custom_eligible_mandate_ctc__6l\", ctc_score > 0 ? 1 : 0);\n            }\n\n            // 2. --- Verified Client ---\n            if (frm.doc.website){ score += 6;\n            frm.doc.custom_verified_client_websitedomain_check=1\n            }\n\n            // 3. --- Recruitment Do-ability Approved ---\n            if (frm.doc.custom_recruitment_doability_approved) score += 10;\n\n            // 4. --- Recent Openings (Positions Open From) Layered Scoring ---\n            if (frm.doc.custom_positions_open_from) {\n                let opening_score = 0;\n                switch (frm.doc.custom_positions_open_from.trim()) {\n                    case \"Less than 60 Days\":\n                        opening_score = 10; // <60 days\n                        break;\n                    case \"60 to 120 Days\":\n                        opening_score = 5; // 60â€“120 days band\n                        break;\n                    default:\n                        opening_score = 0;\n                }\n                score += opening_score;\n                frm.doc.custom_recent_openings_60_days=1\n            }\n\n            // 5. --- Multiple Openings (Recruitment Volume) Layered Scoring ---\n            if (frm.doc.custom_recruitment_volume_perm) {\n                let volume_score = 0;\n                switch (frm.doc.custom_recruitment_volume_perm.trim()) {\n                    case \"1 to 3\":\n                        volume_score = 5;\n                        break;\n                    case \"4 to 6\":\n                        volume_score = 6;\n                        break;\n                    case \"7 and Above\":\n                        volume_score = 10;\n                        break;\n                    default:\n                        volume_score = 0;\n                }\n                score += volume_score;\n                frm.doc.custom_multiple_openings=1\n            }\n            // 6. --- Company Type ---\n            if (frm.doc.custom_company_type == \"Private Limited\" || frm.doc.custom_company_type == \"Listed\") {score += 6;\n            frm.doc.custom_company_type_private_ltd__listed=1\n            }\n\n            // 7. --- Turnover (Layered Scoring) ---\n            if (frm.doc.custom_turnover_in_inr) {\n                let turnover_score = 0;\n                switch (frm.doc.custom_turnover_in_inr.trim()) {\n                    case \"Less than 50 Cr\":\n                        turnover_score = 0;\n                        break;\n                    case \"51 Cr to 150 Cr\":\n                        turnover_score = 6;\n                        break;\n                    case \"150 Cr to 500 Cr\":\n                    case \"More than 500 Cr\":\n                    case \"More than  500 Cr\":\n                        turnover_score = 9;\n                        break;\n                }\n                score += turnover_score;\n                frm.doc.custom_turnover__50_cr=1\n            }\n\n            // 8. --- JD Completeness ---\n            if (frm.doc.custom_jd_completeness) score += 8;\n\n            // 13. --- Save Final Score ---\n            frm.set_value(\"custom_qualification_score\", score);\n\n            // 14. --- Optional Status Update ---\n            // Uncomment if you want to auto-set Lead Status\n            /*\n            if (score >= 53) {\n                frm.set_value(\"status\", \"Qualified\");\n            } else {\n                frm.set_value(\"status\", \"Unqualified\");\n            }\n            */\n\n            frappe.msgprint(__('Qualification Score calculated: {0}', [score]));\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.326670",
  "module": "CRM PP",
  "name": "Lead Age count in lead",
  "script": "frappe.ui.form.on('Lead', {\n    onload: function(frm) {\n        calculate_lead_age(frm);\n    },\n    refresh: function(frm) {\n        calculate_lead_age(frm);\n    },\n    status: function(frm) {\n        set_status_dates(frm);\n    }\n});\n\nfunction set_status_dates(frm) {\n    const status = frm.doc.status;\n\n    if (status === \"Convert\") {\n        if (!frm.doc.custom_convert_on) {\n            frm.set_value('custom_convert_on', frappe.datetime.now_datetime(), () => {\n                calculate_lead_age(frm);\n            });\n        } else {\n            calculate_lead_age(frm);\n        }\n    } else if ([\"Qualified\", \"Converted\"].includes(status)) {\n        if (!frm.doc.custom_custom_qualified_on) {\n            frm.set_value('custom_custom_qualified_on', frappe.datetime.now_datetime(), () => {\n                calculate_lead_age(frm);\n            });\n        } else {\n            calculate_lead_age(frm);\n        }\n    } else if (status === \"Unqualified\") {\n        if (!frm.doc.custom_unqualified_on) {\n            frm.set_value('custom_unqualified_on', frappe.datetime.now_datetime(), () => {\n                calculate_lead_age(frm);\n            });\n        } else {\n            calculate_lead_age(frm);\n        }\n    } else {\n        calculate_lead_age(frm);\n    }\n}\n\nfunction calculate_lead_age(frm) {\n    if (!frm.doc.custom_created_on) return;\n\n    let diff_days = 0;\n    const created_on = new Date(frm.doc.custom_created_on);\n    let end_date;\n    let show_age = false;\n\n    if ([\"New\", \"Working\", \"Nurturing\"].includes(frm.doc.status)) {\n        // Active leads â†’ calculate age until today\n        end_date = new Date();\n        show_age = true;\n    } else if (frm.doc.status === \"Convert\") {\n        // Convert status â†’ only if custom_convert_on exists\n        if (frm.doc.custom_convert_on) {\n            end_date = new Date(frm.doc.custom_convert_on);\n            show_age = true;\n        }\n    } else if ([\"Qualified\", \"Converted\"].includes(frm.doc.status)) {\n        // Qualified leads â†’ only if custom_custom_qualified_on exists\n        if (frm.doc.custom_custom_qualified_on) {\n            end_date = new Date(frm.doc.custom_custom_qualified_on);\n            show_age = true;\n        }\n    } else if (frm.doc.status === \"Unqualified\") {\n        // Unqualified leads â†’ only if custom_unqualified_on exists\n        if (frm.doc.custom_unqualified_on) {\n            end_date = new Date(frm.doc.custom_unqualified_on);\n            show_age = true;\n        }\n    }\n\n    if (show_age) {\n        diff_days = Math.floor((end_date - created_on) / (1000 * 60 * 60 * 24));\n        diff_days = diff_days > 0 ? diff_days : 0;\n    }\n\n    frm.set_df_property('custom_lead_age', 'hidden', !show_age);\n    frm.set_value('custom_lead_age', diff_days);\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.139225",
  "module": "CRM PP",
  "name": "lead Qualified",
  "script": "frappe.ui.form.on('Lead', {\n    status: function(frm) {\n        if (frm.doc.status === \"Qualified\" && !frm.doc.custom_custom_qualified_on) {\n            frm.set_value('custom_custom_qualified_on', frappe.datetime.now_datetime());\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.149167",
  "module": null,
  "name": "Time Zone",
  "script": "frappe.ui.form.on('Lead', {\n    setup(frm) {\n        set_css(frm);\n    }\n});\n\nfunction set_css(frm) {\n    let created = frm.$wrapper.find(\"[data-fieldname='custom_created_on']\");\n    // Hide timezone text under custom_created_on (like \"Asia/Kolkata\")\n    setTimeout(() => {\n        created.parent().find(\".small, .text-muted\").each(function () {\n            let t = $(this).text().trim();\n            if (/^[A-Za-z_]+\\/[A-Za-z_]+$/.test(t)) {\n                $(this).hide();\n            }\n        });\n    }, 200);\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.383884",
  "module": "CRM PP",
  "name": "Opportunity Owner",
  "script": "frappe.ui.form.on('Opportunity', {\n    refresh(frm) {\n        setup_lead_owner_override(frm);\n    },\n\n    onload_post_render(frm) {\n        setup_lead_owner_override(frm);\n    },\n\n    opportunity_owner(frm) {\n        setTimeout(() => setup_lead_owner_override(frm), 100);\n    }\n});\n\nfunction setup_lead_owner_override(frm) {\n    if (!frm.doc.opportunity_owner || !frm.fields_dict.opportunity_owner) return;\n\n    let field = frm.fields_dict.opportunity_owner;\n    if (!field.$input || !field.$input.length) return;\n\n    if (frm.doc.opportunity_owner === \"Administrator\") {\n        field.$input.val(\"Administrator\");\n        return;\n    }\n\n    frappe.db.get_value(\"User\", frm.doc.opportunity_owner, \"full_name\").then(r => {\n        if (r && r.message && r.message.full_name) {\n            let display_name = r.message.full_name;\n            let email = frm.doc.opportunity_owner;\n\n            field.$input.val(display_name);\n\n            field.$input.off('change.lead_owner_fix');\n            field.$input.on('change.lead_owner_fix', function() {\n                if (field.$input.val() === email) {\n                    field.$input.val(display_name);\n                }\n            });\n\n            let observer = new MutationObserver(function(mutations) {\n                mutations.forEach(function(mutation) {\n                    if (mutation.type === 'attributes' && mutation.attributeName === 'value') {\n                        if (field.$input.val() === email) {\n                            field.$input.val(display_name);\n                        }\n                    }\n                });\n\n                if (field.$input.val() === email) {\n                    field.$input.val(display_name);\n                }\n            });\n\n            if (field.$input[0]) {\n                observer.observe(field.$input[0], {\n                    attributes: true,\n                    attributeFilter: ['value']\n                });\n\n                if (!frm._lead_owner_observers) frm._lead_owner_observers = [];\n                frm._lead_owner_observers.push(observer);\n            }\n\n            if (!frm._lead_owner_interval) {\n                frm._lead_owner_interval = setInterval(() => {\n                    if (frm.doc.opportunity_owner === email && field.$input.val() === email) {\n                        field.$input.val(display_name);\n                    }\n                }, 100);\n            }\n\n            if (field.awesomplete && field.awesomplete.input) {\n                field.awesomplete.input.value = display_name;\n            }\n\n            let original_parse = field.parse_validate_and_set_in_model;\n            field.parse_validate_and_set_in_model = function(value) {\n                if (value === display_name) value = email;\n                return original_parse.call(field, value);\n            };\n        }\n    });\n}\n\n$(document).on('form-unload', function() {\n    frappe.route_hooks.after_load = (frm) => {\n        if (frm._lead_owner_interval) clearInterval(frm._lead_owner_interval);\n        if (frm._lead_owner_observers) frm._lead_owner_observers.forEach(obs => obs.disconnect());\n    };\n});\n\nfrappe.form.link_formatters['User'] = function(value, doc, options) {\n    if (!value) return '';\n    if (value === 'Administrator') return 'Administrator';\n\n    if (frappe.boot.user_info && frappe.boot.user_info[value]) {\n        return frappe.boot.user_info[value].fullname || value;\n    }\n\n    return value;\n};\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.222512",
  "module": null,
  "name": "Like and Comment",
  "script": "frappe.ui.form.on('Lead', {\n    refresh(frm) {\n        // Hide like widget\n        frm.$wrapper.find(\".form-stats-likes\").hide();\n\n        // Hide comments widget\n        frm.$wrapper.find(\".comments-count\").hide();\n        frm.$wrapper.find(\"a.comments\").hide();\n        \n        frm.$wrapper.find(\"a.form-follow\").hide();\n        frm.$wrapper.find(\".add-assignment-label\").hide();\n        frm.$wrapper.find(\".add-assignment-btn\").hide();\n        \n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.348016",
  "module": null,
  "name": "qualification matrix-ui box",
  "script": "frappe.ui.form.on('Lead', {\n    onload: function(frm) {\n        frm.toggle_display(\"custom_qualification_score\", frm.doc.custom_qualification_score !== -1);\n        frm._previous_status = frm.doc.status; // track old status\n    },\n    \n    refresh: function(frm) {\n        frm.toggle_display(\"custom_qualification_score\", frm.doc.custom_qualification_score !== -1);\n    },\n\n    status: function(frm) {\n        // When switching to Nurturing, reset the score and hide it\n        if (frm.doc.status === \"Nurturing\") {\n            frm.set_value(\"custom_qualification_score\", -1);\n            frm.toggle_display(\"custom_qualification_score\", false);\n        }\n\n        // Automatically open checklist when moving FROM Nurturing â†’ Qualified/Unqualified\n        if (frm._previous_status === \"Nurturing\" && \n            [\"Qualified\", \"Unqualified\"].includes(frm.doc.status)) {\n            \n            // Directly open the checklist dialog (no confirmation)\n            open_checklist_dialog(frm, frm.doc.status);\n        }\n\n        // Update previous status tracker\n        frm._previous_status = frm.doc.status;\n    },\n});\n\n// --- Checklist dialog function ---\nfunction open_checklist_dialog(frm, next_status) {\n    const d = new frappe.ui.Dialog({\n        title: __('Permanent Staffing Checklist'),\n        fields: [\n            { fieldtype: 'Section Break', label: 'Checklist' },\n            // --- COLUMN 1 ---\n            { label: 'Eligible Mandate (CTC â‰¥ â‚¹6L)', fieldname: 'custom_eligible_mandate_ctc__6l', fieldtype: 'Check', default: frm.doc.custom_eligible_mandate_ctc__6l },\n            { label: 'Verified Client (Website/Domain Check)', fieldname: 'custom_verified_client_websitedomain_check', fieldtype: 'Check', default: frm.doc.custom_verified_client_websitedomain_check },\n            { label: 'Recent Openings (â‰¤60 days)', fieldname: 'custom_recent_openings_60_days', fieldtype: 'Check', default: frm.doc.custom_recent_openings_60_days },\n            { label: 'Location Tier (Metro / Tier 1 / Tier 2)', fieldname: 'custom_location_tier_metro__tier_1__tier_2_', fieldtype: 'Check', default: frm.doc.custom_location_tier_metro__tier_1__tier_2_ },\n            { label: 'Company Type (Private Ltd / Listed)', fieldname: 'custom_company_type_private_ltd__listed', fieldtype: 'Check', default: frm.doc.custom_company_type_private_ltd__listed },\n            { label: 'JD Completeness', fieldname: 'custom_jd_completeness', fieldtype: 'Check', default: frm.doc.custom_jd_completeness },\n            { fieldtype: 'Column Break' },\n            // --- COLUMN 2 ---\n            { label: 'Company Age â‰¥ 3 years', fieldname: 'custom_company_age__3_years', fieldtype: 'Check', default: frm.doc.custom_company_age__3_years },\n            { label: 'Recruitment Do-ability Approved', fieldname: 'custom_recruitment_doability_approved', fieldtype: 'Check', default: frm.doc.custom_recruitment_doability_approved },\n            { label: 'Target Industry', fieldname: 'custom_target_industry_', fieldtype: 'Check', default: frm.doc.custom_target_industry_ },\n            { label: 'Multiple Openings', fieldname: 'custom_multiple_openings', fieldtype: 'Check', default: frm.doc.custom_multiple_openings },\n            { label: 'Turnover â‰¥ â‚¹50 Cr', fieldname: 'custom_turnover__50_cr', fieldtype: 'Check', default: frm.doc.custom_turnover__50_cr },\n            { label: 'Budget Clarity', fieldname: 'custom_budget_clarity', fieldtype: 'Check', default: frm.doc.custom_budget_clarity },\n        ],\n        primary_action(values) {\n    d.hide();\n\n    // Save checklist values\n    Object.keys(values).forEach(fieldname => {\n        frm.set_value(fieldname, values[fieldname] ? 1 : 0);\n    });\n\n    let score = 0;\n\n    // If Recruitment Do-ability is not approved â†’ show confirmation before marking Unqualified\n    if (!values.custom_recruitment_doability_approved) {\n        frappe.confirm(\n            __('Lead is Unqualified because Recruitment Do-ability is not approved. Do you want to proceed?'),\n            function() {\n                // User clicked Yes\n                frm.set_value(\"custom_qualification_score\", 0);\n                frm.set_value(\"status\", \"Unqualified\");\n                frm.set_value(\"custom_unqualified_reason\", \"Do-ability issue\");\n                frm.toggle_display(\"custom_qualification_score\", true);\n\n                frappe.show_alert(__('Lead marked as Unqualified.'), 5);\n\n                setTimeout(() => frm.save('Save'), 100);\n            },\n            function() {\n                // User clicked No â†’ do nothing\n                frappe.show_alert(__('Action cancelled. Lead status changed.'), 5);\n                frm.set_value(\"status\", \"Nurturing\");\n                setTimeout(() => {\n                    frm.save('Save').then(() => {\n                        frm.reload_doc();\n                    });\n                }, 100);\n            }\n        );\n        return;\n    }\n\n    // If approved â†’ calculate score\n    if (values.custom_eligible_mandate_ctc__6l) score += 10;\n    if (values.custom_verified_client_websitedomain_check) score += 6;\n    if (values.custom_company_age__3_years) score += 6;\n    if (values.custom_recruitment_doability_approved) score += 10;\n    if (values.custom_recent_openings_60_days) score += 8;\n    if (values.custom_target_industry_) score += 7;\n    if (values.custom_location_tier_metro__tier_1__tier_2_) score += 7;\n    if (values.custom_multiple_openings) score += 8;\n    if (values.custom_company_type_private_ltd__listed) score += 6;\n    if (values.custom_turnover__50_cr) score += 5;\n    if (values.custom_jd_completeness) score += 8;\n    if (values.custom_budget_clarity) score += 6;\n\n    // Mark lead as qualified\n    frm.set_value(\"custom_qualification_score\", score);\n    frm.set_value(\"status\", \"Qualified\");\n    frm.toggle_display(\"custom_qualification_score\", true);\n\n    frappe.show_alert(__('Checklist saved successfully. Qualification Score: {0}', [score]), 5);\n\n    setTimeout(() => {\n        frm.save('Save', null, null, () => {\n            console.log('Lead saved successfully after checklist completion');\n        });\n    }, 100);\n\n\n        }\n    });\n\n    d.show();\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.394348",
  "module": "CRM PP",
  "name": "Hide Assing Opp",
  "script": "frappe.ui.form.on('Opportunity', {\n    refresh(frm) {\n        // Hide like widget\n        frm.$wrapper.find(\".form-stats-likes\").hide();\n\n        // Hide comments widget\n        frm.$wrapper.find(\".comments-count\").hide();\n        frm.$wrapper.find(\"a.comments\").hide();\n        frm.$wrapper.find(\".comment-btn\").hide(); // <-- comment button hide\n\n        // Hide follow and assignment buttons\n        frm.$wrapper.find(\"a.form-follow\").hide();\n        frm.$wrapper.find(\".add-assignment-label\").hide();\n        frm.$wrapper.find(\".add-assignment-btn\").hide();\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.170794",
  "module": "CRM PP",
  "name": "Hide email option",
  "script": "frappe.ui.form.on('Lead', {\n    refresh(frm) {\n        setTimeout(() => {\n            const $email_btn = $('a.dropdown-item:contains(\"Email\")');\n            \n            if ($email_btn.length) {\n                $email_btn.on('click', function() {\n                    setTimeout(() => {\n                        $('label:contains(\"Attach Document Print\")').closest('.frappe-control').hide();\n                        \n                        $('label:contains(\"Select Print Format\")').closest('.frappe-control').hide();\n                        \n                        $('label:contains(\"Print Language\")').closest('.frappe-control').hide();\n                    }, 300);\n                });\n            }\n        }, 500);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.404712",
  "module": "CRM PP",
  "name": "Hide email option in Opporunity",
  "script": "frappe.ui.form.on('Opportunity', {\n    refresh(frm) {\n        setTimeout(() => {\n            const $email_btn = $('a.dropdown-item:contains(\"Email\")');\n            \n            if ($email_btn.length) {\n                $email_btn.on('click', function() {\n                    setTimeout(() => {\n                        $('label:contains(\"Attach Document Print\")').closest('.frappe-control').hide();\n                        \n                        $('label:contains(\"Select Print Format\")').closest('.frappe-control').hide();\n                        \n                        $('label:contains(\"Print Language\")').closest('.frappe-control').hide();\n                    }, 300);\n                });\n            }\n        }, 500);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.201004",
  "module": "CRM PP",
  "name": "Assing date",
  "script": "frappe.ui.form.on('Lead', {\n    before_save: function(frm) {\n        // Agar lead_owner field bhara hua hai\n        if (frm.doc.lead_owner) {\n            let today = frappe.datetime.get_today();\n\n            // Agar custom_assigned_date blank hai ya lead_owner badla gaya hai, tab hi update karo\n            if (!frm.doc.custom_assigned_date || frm.doc.lead_owner !== frm.doc.__last_owner) {\n                frm.set_value('custom_assigned_date', today);\n            }\n        } else {\n            frm.set_value('custom_assigned_date', null);\n        }\n    },\n    lead_owner: function(frm) {\n        // Track previous owner for comparison\n        frm.doc.__last_owner = frm.doc.lead_owner;\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.243080",
  "module": null,
  "name": "Lead - Opportunity",
  "script": "frappe.provide(\"erpnext\");\ncur_frm.email_field = \"email_id\";\n\nerpnext.CustomLeadController = class CustomLeadController extends erpnext.LeadController {\n\trefresh() {\n\t\t// âœ… Keep ERPNext's original behavior (Notes, Activities, Address, etc.)\n\t\tsuper.refresh();\n\n\t\tconst frm = this.frm;\n\t\tconst doc = frm.doc;\n\n\t\t// âœ… Always remove ERPNextâ€™s default \"Create Opportunity\" button\n\t\tfrm.remove_custom_button(\"Opportunity\", \"Create\");\n\n\t\t// âœ… Remove entire \"Create\" menu by default\n\t\tfrm.clear_custom_buttons();\n\n\t\t// âœ… Show custom Create menu only for Convert / Converted status\n\t\tif (!frm.is_new() && [\"Convert\", \"Converted\"].includes(doc.status)) {\n\t\t\tfrm.add_custom_button(__(\"Opportunity\"), this.make_opportunity.bind(this), __(\"Create\"));\n\t\t}\n\t}\n\n\tasync make_opportunity() {\n\t\tconst frm = this.frm;\n\n\t\tlet existing_prospect = (\n\t\t\tawait frappe.db.get_value(\n\t\t\t\t\"Prospect Lead\",\n\t\t\t\t{ lead: frm.doc.name },\n\t\t\t\t\"name\",\n\t\t\t\tnull,\n\t\t\t\t\"Prospect\"\n\t\t\t)\n\t\t).message?.name;\n\n\t\tawait frm.reload_doc();\n\n\t\tlet existing_contact = (\n\t\t\tawait frappe.db.get_value(\n\t\t\t\t\"Contact\",\n\t\t\t\t{\n\t\t\t\t\tfirst_name: frm.doc.first_name || frm.doc.lead_name,\n\t\t\t\t\tlast_name: frm.doc.last_name,\n\t\t\t\t},\n\t\t\t\t\"name\"\n\t\t\t)\n\t\t).message?.name;\n\n\t\tlet fields = [];\n\n\t\tfields.push({\n\t\t\tfieldtype: \"HTML\",\n\t\t\tfieldname: \"info_section\",\n\t\t\toptions: `\n\t\t\t\t<ul style=\"margin-top:10px;\">\n\t\t\t\t\t<li>âœ… Customer Created</li>\n\t\t\t\t\t<li>âœ… Contact Created</li>\n\t\t\t\t</ul>\n\t\t\t`\n\t\t});\n\n\t\tif (!existing_prospect) {\n\t\t\tfields.push({\n\t\t\t\tlabel: \"Create Opportunity\",\n\t\t\t\tfieldname: \"create_opportunity\",\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tdefault: 0\n\t\t\t});\n\t\t}\n\n\t\tconst d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Convert Lead\"),\n\t\t\tfields: fields,\n\t\t\tprimary_action_label: __(\"Create\"),\n\t\t\tprimary_action(data) {\n\t\t\t\tif (data.create_opportunity) {\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: \"create_prospect_and_contact\",\n\t\t\t\t\t\tdoc: frm.doc,\n\t\t\t\t\t\targs: { data },\n\t\t\t\t\t\tfreeze: true,\n\t\t\t\t\t\tcallback(r) {\n\t\t\t\t\t\t\tif (!r.exc) {\n\t\t\t\t\t\t\t\tfrappe.model.open_mapped_doc({\n\t\t\t\t\t\t\t\t\tmethod: \"erpnext.crm.doctype.lead.lead.make_opportunity\",\n\t\t\t\t\t\t\t\t\tfrm: frm,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.msgprint(__(\"Customer and Contact Created Successfully. Opportunity not created.\"));\n\t\t\t\t}\n\t\t\t\td.hide();\n\t\t\t},\n\t\t});\n\t\td.show();\n\t}\n};\n\n// âœ… Register the controller\nextend_cscript(cur_frm.cscript, new erpnext.CustomLeadController({ frm: cur_frm }));\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.415389",
  "module": null,
  "name": "Only the owner has access to edit",
  "script": "\nfrappe.ui.form.on('Opportunity', {\n    refresh: function(frm) {\n        if (frm.is_new()) {\n            return;\n        }\n        const is_allowed_to_edit = frappe.user.has_role('Admin') || frm.doc.opportunity_owner === frappe.session.user;\n\n        if (is_allowed_to_edit) {\n            frm.fields.forEach(function(field) {\n                frm.set_df_property(field.df.fieldname, 'read_only', 0);\n            });\n            frm.page.set_primary_action('Save');\n        } else {\n            frm.fields.forEach(function(field) {\n                frm.set_df_property(field.df.fieldname, 'read_only', 1);\n            });\n            frm.page.clear_primary_action();\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.233098",
  "module": null,
  "name": "Only owner has access to edit (lead)",
  "script": "frappe.ui.form.on('Lead', {\n    refresh: function(frm) {\n        if (frm.is_new()) {\n            return;\n        }\n\n        const is_allowed_to_edit = frappe.user.has_role('Admin') || frm.doc.lead_owner === frappe.session.user;\n\n        if (is_allowed_to_edit) {\n            frm.fields.forEach(function(field) {\n                frm.set_df_property(field.df.fieldname, 'read_only', 0);\n            });\n            frm.page.set_primary_action('Save');\n        } else {\n            frm.fields.forEach(function(field) {\n                frm.set_df_property(field.df.fieldname, 'read_only', 1);\n            });\n            frm.page.clear_primary_action();\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.264185",
  "module": "Test",
  "name": "Add vertical - subvertical",
  "script": "frappe.ui.form.on(\"Lead\", {\n\trefresh(frm) {\n\t\tsetTimeout(() => {\n\t\t\tfrm.trigger(\"set_sub_vertical_options\");\n\t\t}, 500);\n\t},\n\n\tstatus(frm) {\n\t\tfrm.trigger(\"set_sub_vertical_options\");\n\t},\n\n\tcustom_vertical(frm) {\n\t\tfrm.trigger(\"set_sub_vertical_options\");\n\t},\n\n\tset_sub_vertical_options(frm) {\n\t\tif (frm.doc.custom_vertical !== \"Franchise\") {\n\t\t\tfrm.set_df_property(\"custom_sub_vertical\", \"options\", []);\n\t\t\treturn;\n\t\t}\n\n\t\tlet qualified_options = [\n\t\t\t\"NAPS/Apprenticeship Hiring\",\n\t\t\t\"Diversity Hiring\",\n\t\t\t\"General Staffing/Payroll Management\",\n\t\t\t\"Gig Hiring/ Flexi Staffing\",\n\t\t\t\"Bulk Hiring\",\n\t\t\t\"IT/Technical Hiring\",\n\t\t\t\"POSH Certificate Course\",\n\t\t\t\"Recruitment\",\n\t\t\t\"Posh Online Course (4hrs)\",\n\t\t\t\"Posh Master Class (8hrs)\",\n\t\t\t\"Posh End-to-End Compliance\",\n\t\t\t\"Policy Drafting\",\n\t\t\t\"ICC Committee Set Up\",\n\t\t\t\"Posh Awareness\",\n\t\t\t\"Posh Train the Trainer\"\n\t\t];\n\n\t\tlet unqualified_options = [\n\t\t\t\"Not Interested\",\n\t\t\t\"Budget Constraints\",\n\t\t\t\"Location Not Suitable\",\n\t\t\t\"Delayed Decision\",\n\t\t\t\"Franchise Model Not Suitable\",\n\t\t\t\"No Response\",\n\t\t\t\"Unable to Arrange Funds\",\n\t\t\t\"Considering Other Opportunities\",\n\t\t\t\"Eligibility Criteria Not Met\",\n\t\t\t\"Not willing to pay Franchise Fees\",\n\t\t\t\"Franchise owner not actively involved\",\n\t\t\t\"Job Enquiry\",\n\t\t\t\"Terms & Conditions\",\n\t\t\t\"Contact in future\",\n\t\t\t\"Not a Franchise enquiry\"\n\t\t];\n\n\t\tif (frm.doc.status === \"Qualified\") {\n\t\t\tfrm.set_df_property(\"custom_sub_vertical\", \"options\", qualified_options);\n\t\t}\n\t\telse if (frm.doc.status === \"Unqualified\") {\n\t\t\tfrm.set_df_property(\"custom_sub_vertical\", \"options\", unqualified_options);\n\t\t}\n\t\telse {\n\t\t\tfrm.set_df_property(\"custom_sub_vertical\", \"options\", []);\n\t\t}\n\n\t\tlet all_options = [...qualified_options, ...unqualified_options];\n\t\tif (!all_options.includes(frm.doc.custom_sub_vertical)) {\n\t\t\tfrm.set_value(\"custom_sub_vertical\", \"\");\n\t\t}\n\t}\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.425349",
  "module": "Test",
  "name": "Opportunitye",
  "script": "frappe.ui.form.on(\"Opportunity\", {\n    lead: function(frm) {\n        if (frm.doc.lead) {\n            frappe.db.get_value(\"Lead\", frm.doc.lead, [\"email_id\"], (r) => {\n                if (r && r.email_id) {\n                    frm.set_value(\"contact_email\", r.email_id);\n                }\n            });\n        }\n    },\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.285113",
  "module": null,
  "name": "Qualification-matrix-franchise",
  "script": "frappe.ui.form.on('Lead', {\n    validate: function(frm) {\n        if (frm.doc.custom_vertical == \"Franchise\" && frm.doc.status != \"New\") {\n            let score = 0;\n            let missing_required = false;\n\n            // --- 1. Mandatory Checks ---\n            const mandatory_fields = [\n                \"custom_recruitment_investment\",\n                \"custom_financial_readiness\",\n                \"custom_team_hiring\"\n            ];\n\n            mandatory_fields.forEach(field => {\n                if (!frm.doc[field]) {\n                    missing_required = true;\n                }\n            });\n\n            // --- 2. If any mandatory missing, set score = 0 and mark unqualified ---\n            if (missing_required) {\n                score = 0;\n                frm.set_value(\"custom_qualification_score\", score);\n                frm.set_value(\"status\", \"Unqualified\");\n                frappe.msgprint({\n                    title: __(\"Missing Information\"),\n                    message: __(\"Please complete all mandatory fields: Recruitment Investment, Financial Readiness, and Team Hiring.\"),\n                    indicator: \"red\"\n                });\n                return; // stop further calculation\n            }\n\n            // --- 3. Optional scoring logic ---\n            if (frm.doc.custom_local_connections) score += 8;\n\n            if (frm.doc.custom_office_space_franchise) {\n                score += 7;\n                frm.doc.custom_office_space = 1;\n            }\n\n            if (frm.doc.custom_recruitment_investment) score += 10;\n            if (frm.doc.custom_target_city) score += 9;\n            if (frm.doc.custom_financial_readiness) score += 10;\n            if (frm.doc.custom_team_hiring) score += 10;\n\n            if (frm.doc.custom__franchisee_engagement_intent) {\n                let volume_score = 0;\n                switch (frm.doc.custom__franchisee_engagement_intent.trim()) {\n                    case \"Full-time (Active Operational Involvement)\":\n                        volume_score = 10;\n                        break;\n                    case \"Part-time (Supervisory / Oversight Role)\":\n                        volume_score = 7;\n                        break;\n                    case \"Undecided / To be discussed\":\n                        volume_score = 3;\n                        break;\n                    default:\n                        volume_score = 0;\n                }\n                score += volume_score;\n                frm.doc.custom_active_involvement = 1;\n            }\n\n            // --- 4. Save Final Score ---\n            frm.set_value(\"custom_qualification_score\", score);\n\n            // --- 5. Optional Auto-status based on score ---\n            if (score >= 53) {\n                frm.set_value(\"status\", \"Qualified\");\n            } else {\n                frm.set_value(\"status\", \"Unqualified\");\n            }\n\n            // --- 6. Message ---\n            frappe.msgprint(__('Qualification Score calculated: {0}', [score]));\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.295122",
  "module": null,
  "name": "Qualification-matrix-LLC",
  "script": "frappe.ui.form.on('Lead', {\n    validate: function(frm) {\n        if (frm.doc.custom_vertical == \"Labour Law Advisory & Compliance\" && frm.doc.status!=\"New\") {\n            let score = 0;\n            let missing_required = false;\n\n            // --- Mandatory Fields ---\n            const mandatory_fields = [\n                \"custom_scope_of_enquiry\",\n                \"custom_exclusion_of_personal_grievances\",\n                \"custom_not_a_sub_contracting_lead\"\n            ];\n\n            // --- Check if any required field is missing ---\n            mandatory_fields.forEach(field => {\n                if (!frm.doc[field]) {\n                    missing_required = true;\n                }\n            });\n\n            // --- If any required missing, mark as unqualified ---\n            if (missing_required) {\n                score = 0;\n                frm.set_value(\"custom_qualification_score\", score);\n                frm.set_value(\"status\", \"Unqualified\");\n\n                frappe.msgprint({\n                    title: __(\"Missing Information\"),\n                    message: __(\"Please complete all mandatory fields: Scope of Enquiry, Exclusion of Personal Grievances, and Not a Sub-contracting Lead.\"),\n                    indicator: \"red\"\n                });\n\n                return; // stop further execution\n            }\n\n            // --- Continue with Scoring Logic ---\n            if (frm.doc.custom_scope_of_enquiry) score += 9;\n\n            if (frm.doc.custom_exclusion_of_personal_grievances) score += 6;\n\n            if (frm.doc.custom_not_a_sub_contracting_lead) score += 9;\n\n            if (frm.doc.custom_no_of_officesplants) {\n                let volume_score = 0;\n                switch (frm.doc.custom_no_of_officesplants.trim()) {\n                    case \"1â€“2   Single / Local Operation\":\n                        volume_score = 6;\n                        break;\n                    case \"3â€“10 Regional Presence\":\n                        volume_score = 8;\n                        break;\n                    case \"11+\t Multi-location / National Presence\":\n                        volume_score = 10;\n                        break;\n                    default:\n                        volume_score = 0;\n                }\n                score += volume_score;\n                frm.doc.custom_multilocation_presence = 1;\n            }\n\n            if (frm.doc.custom_turnover_in_inr) {\n                let volume_score = 0;\n                switch (frm.doc.custom_turnover_in_inr.trim()) {\n                    case \"Less than 50 Cr\":\n                        volume_score = 6;\n                        break;\n                    case \"50 Cr to 200 Cr\":\n                        volume_score = 8;\n                        break;\n                    case \"200 and above\":\n                        volume_score = 10;\n                        break;\n                    default:\n                        volume_score = 0;\n                }\n                score += volume_score;\n                frm.doc.custom_turnover = 1;\n            }\n\n            // --- Save Final Score ---\n            frm.set_value(\"custom_qualification_score\", score);\n\n            // --- Auto-set Status (Optional) ---\n            if (score >= 40) {\n                frm.set_value(\"status\", \"Qualified\");\n            } else {\n                frm.set_value(\"status\", \"Unqualified\");\n            }\n\n            frappe.msgprint(__('Qualification Score calculated: {0}', [score]));\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.315464",
  "module": null,
  "name": "qualification Matrix-Temporary staffing",
  "script": "frappe.ui.form.on('Lead', {\n\n    // --- Auto Calculate Company Age when Establishment Year changes ---\n    custom_company_establishment_year: function(frm) {\n        if (frm.doc.custom_company_establishment_year) {\n            let currentYear = new Date().getFullYear();\n            let companyAge = currentYear - frm.doc.custom_company_establishment_year;\n\n            // Set flag if company is 3+ years old\n            frm.set_value(\"custom_company_establishment\", companyAge >= 3 ? 1 : 0);\n        }\n    },\n\n    validate: function(frm) {\n        if (frm.doc.custom_vertical == \"Temporary Staffing\" && frm.doc.status != \"New\") {\n            let score = 0;\n            let missing_required = false;\n\n            // --- Mandatory Field Check ---\n            const mandatory_fields = [\n                \"custom_employment_tenure_temp\",\n                \"custom_recruitment_doability_approved_temp\",\n                \"custom_minimum_wages\",\n                \"custom_compliance_scope_pfesi_etc\"\n            ];\n\n            mandatory_fields.forEach(field => {\n                if (!frm.doc[field]) missing_required = true;\n            });\n\n            // --- Handle Missing Mandatory Fields ---\n            if (missing_required) {\n                frm.set_value(\"custom_qualification_score\", 0);\n                frm.set_value(\"status\", \"Unqualified\");\n                refresh_field(\"status\");\n\n                frappe.msgprint({\n                    title: __(\"Missing Information\"),\n                    message: __(\"Please complete all mandatory fields before qualification scoring:<br><br>â€¢ Employment Tenure<br>â€¢ Recruitment Do-ability Approved<br>â€¢ Minimum Wages<br>â€¢ Compliance Scope (PF/ESI etc.)\"),\n                    indicator: \"red\"\n                });\n                return;\n            }\n\n            // --- 1. Company Age ---\n            if (frm.doc.custom_company_establishment_year) {\n                let currentYear = new Date().getFullYear();\n                let companyAge = currentYear - frm.doc.custom_company_establishment_year;\n                if (companyAge >= 3) {\n                    frm.set_value(\"custom_company_establishment\", 1);\n                    score += 6;\n                } else {\n                    frm.set_value(\"custom_company_establishment\", 0);\n                }\n            }\n\n            // --- 2. Compliance scope (PF/ESI etc.) ---\n            if (frm.doc.custom_compliance_scope_pfesi_etc) score += 10;\n\n            // --- 3. Minimum Wages ---\n            if (frm.doc.custom_minimum_wages) score += 7;\n\n            // --- 4. Client Due Diligence ---\n            if (frm.doc.custom_client_due_diligence) score += 8;\n\n            // --- 5. Recruitment Do-ability Approved ---\n            if (frm.doc.custom_recruitment_doability_approved_temp) score += 10;\n\n            // --- 6. Company Type ---\n            if (frm.doc.custom_company_type == \"Private Limited\" || frm.doc.custom_company_type == \"Listed\") {\n                score += 6;\n                frm.doc.custom_company_temp = 1;\n            }\n\n            // --- 7. Employment Tenure ---\n            if (frm.doc.custom_employment_tenure_temp > 1) {\n                score += 6;\n                frm.doc.custom_employment_tenure = 1;\n            }\n\n            // --- 8. Minimum Staffing Requirement ---\n            if (frm.doc.custom_recruitment_volume) {\n                let volume_score = 0;\n                switch (frm.doc.custom_recruitment_volume.trim()) {\n                    case \"10 to 50\":\n                        volume_score = 6;\n                        break;\n                    case \"51 to 100\":\n                        volume_score = 9;\n                        break;\n                    case \"Above 100\":\n                        volume_score = 10;\n                        break;\n                }\n                score += volume_score;\n                frm.doc.custom_multilocation_presence = 1;\n            }\n\n            // --- 9. Turnover ---\n            if (frm.doc.custom_turnover_in_inr) {\n                let turnover_score = 0;\n                switch (frm.doc.custom_turnover_in_inr.trim()) {\n                    case \"Less than 50 Cr\":\n                        turnover_score = 0;\n                        break;\n                    case \"50 Cr to 200 Cr\":\n                        turnover_score = 6;\n                        break;\n                    case \"200 and above\":\n                        turnover_score = 9;\n                        break;\n                }\n                score += turnover_score;\n                frm.doc.custom_turnover_temp = 1;\n            }\n\n            // --- 10. Save Final Score ---\n            frm.set_value(\"custom_qualification_score\", score);\n\n            // --- 11. Auto Status Update ---\n            if (score >= 50) {\n                frm.set_value(\"status\", \"Qualified\");\n            } else {\n                frm.set_value(\"status\", \"Unqualified\");\n            }\n\n            frappe.msgprint(__('Qualification Score calculated: {0}', [score]));\n        }\n    },\n\n    refresh: function(frm) {\n        // Dynamically mark mandatory fields as required\n        if (frm.doc.custom_vertical == \"Temporary Staffing\") {\n            [\n                \"custom_employment_tenure_temp\",\n                \"custom_recruitment_doability_approved_temp\",\n                \"custom_minimum_wages\",\n                \"custom_compliance_scope_pfesi_etc\"\n            ].forEach(field => frm.set_df_property(field, \"reqd\", 1));\n        } else {\n            [\n                \"custom_employment_tenure_temp\",\n                \"custom_recruitment_doability_approved_temp\",\n                \"custom_minimum_wages\",\n                \"custom_compliance_scope_pfesi_etc\"\n            ].forEach(field => frm.set_df_property(field, \"reqd\", 0));\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-23 00:05:06.305212",
  "module": null,
  "name": "qualification Matrix- L&D",
  "script": "frappe.ui.form.on('Lead', {\n    validate: function(frm) {\n        if (frm.doc.custom_vertical == \"Learning & Development\" && frm.doc.status != \"New\") {\n            let score = 0;\n\n            // --- 1. Mandatory Field Check ---\n            if (!frm.doc.no_of_employees || frm.doc.no_of_employees < 5) {\n                frm.set_value(\"custom_qualification_score\", 0);\n                frm.set_value(\"status\", \"Unqualified\");\n                refresh_field(\"status\"); // force update\n\n                frappe.msgprint({\n                    title: __(\"Missing Information\"),\n                    message: __(\"Please specify at least 5 Employees / Participants before qualification scoring.\"),\n                    indicator: \"red\"\n                })\n                return;\n            }\n\n            // --- 2. Trainer Availability / Scheduling Fit ---\n            if (frm.doc.custom_trainer_availability__scheduling_fit) score += 9;\n\n            // --- 3. Direct Delivery ---\n            if (frm.doc.custom_direct_delivery_no_subcontracting) score += 9;\n\n            // --- 4. B2B Engagement ---\n            if (frm.doc.custom_b2b_engagement) score += 7;\n\n            // --- 5. Number of Employees / Participants ---\n            if (frm.doc.no_of_employees >= 5) {\n                score += 7;\n                frm.doc.custom_number_of_employees__participants = 1;\n            }\n\n            // --- 6. Turnover ---\n            if (frm.doc.custom_turnover_in_inr) {\n                let volume_score = 0;\n                switch (frm.doc.custom_turnover_in_inr.trim()) {\n                    case \"Less than 50 Cr\":\n                        volume_score = 5;\n                        break;\n                    case \"50 Cr to 200 Cr\":\n                        volume_score = 7;\n                        break;\n                    case \"200 and above\":\n                        volume_score = 9;\n                        break;\n                }\n                score += volume_score;\n                frm.doc.custom_turnover_ld = 1;\n            }\n\n            // --- 7. Requested Training Timeline ---\n            if (frm.doc.custom_requested_training_timeline) {\n                let volume_score = 0;\n                switch (frm.doc.custom_requested_training_timeline.trim()) {\n                    case \"Less Than 30 Days\":\n                        volume_score = 10;\n                        break;\n                    case \"30 days to 60 Days\":\n                        volume_score = 8;\n                        break;\n                    case \"60 Days and Above\":\n                        volume_score = 6;\n                        break;\n                }\n                score += volume_score;\n                frm.doc.custom_urgency__timeline = 1;\n            }\n\n            // --- 8. Save Final Score ---\n            frm.set_value(\"custom_qualification_score\", score);\n\n            // --- 9. Auto-Status Update ---\n            if (score >= 40) {\n                frm.set_value(\"status\", \"Qualified\");\n            } else {\n                frm.set_value(\"status\", \"Unqualified\");\n            }\n\n            frappe.msgprint(__('Qualification Score calculated: {0}', [score]));\n        }\n    },\n\n    refresh: function(frm) {\n        // Dynamically make Number of Employees mandatory only for L&D vertical\n        if (frm.doc.custom_vertical == \"Learning & Development\") {\n            frm.set_df_property(\"no_of_employees\", \"reqd\", 1);\n        } else {\n            frm.set_df_property(\"no_of_employees\", \"reqd\", 0);\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2025-10-23 00:22:19.598966",
  "module": null,
  "name": "Opportunity Probability Auto Set",
  "script": "frappe.ui.form.on('Opportunity', {\n    status: function(frm) {\n        // Define status to probability mapping\n        const status_probability = {\n            'Proposal': 40,\n            'Negotiation': 70,\n            'Agreement': 90,\n            'Closed Won': 100\n        };\n        \n        // Get current status\n        let status = frm.doc.status;\n        \n        // Set probability based on status\n        if (status in status_probability) {\n            frm.set_value('probability', status_probability[status]);\n        }\n    },\n    \n    refresh: function(frm) {\n        // Set probability to 0 on new form\n        if (frm.is_new() && !frm.doc.probability) {\n            frm.set_value('probability', 0);\n        }\n    }\n});",
  "view": "Form"
 }
]